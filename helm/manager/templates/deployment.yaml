apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "manager.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "manager.fullname" . }}
    chart: {{ template "manager.fullname" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "manager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        logType: "scala"
        app: {{ template "manager.name" . }}
        release: {{ .Release.Name }}
        logging: "true"
    spec:
      serviceAccountName: {{ if .Values.serviceAccount.name }}{{ .Values.serviceAccount.name }}{{ else }}"hydro-serving-manager-sa-{{ .Release.Name }}"{{ end }}
      containers:
        - name: dind
          image: docker:18.06.0-ce-dind
          securityContext:
            privileged: true
          {{- if .Values.global.registry.insecure }}
          args: [{{ printf "--insecure-registry=%s" .Values.global.registry.url }}]
          {{- end }}
        - name: kubectl-proxy
          image: tommyvn/kubectl-proxy
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        - name: {{ .Chart.Name }}
          image: {{ if .Values.image.full }}"{{ .Values.image.full }}"{{ else }}"{{ .Values.image.repository }}:{{ .Values.image.tag }}"{{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
            - name: grpc
              containerPort: 9091
              protocol: TCP
          env:
            - name: JAVA_OPTS
              value: "-Xmx1024m -Xms128m -Xss16M"  
            - name: ADVERTISED_MANAGER_HOST
              value: "{{ template "manager.fullname" . }}"
            - name: ADVERTISED_MANAGER_PORT
              value: "9091"
            - name: DATABASE_HOST
              value: {{ if .Values.global.postgresql.url }}"{{ .Values.global.postgresql.url }}"{{ else }}"{{ template "postgresql.fullname" . }}" {{ end }}
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "{{ .Values.global.postgresql.database }}"
            - name: DATABASE_USERNAME
              value: "{{ .Values.global.postgresql.username }}"
            - name: DATABASE_PASSWORD
              value: "{{ .Values.global.postgresql.password }}"
            - name: DOCKER_HOST
              value: "tcp://localhost:2375"
            - name: CLOUD_DRIVER
              value: "kubernetes"
            - name: KUBE_PROXY_SERVICE_HOST
              value: "localhost"
            - name: KUBE_PROXY_SERVICE_PORT
              value: "8001"
            - name: KUBE_REGISTRY_SECRET_NAME
              value: "docker-credentials-{{ .Release.Name }}"
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REMOTE_DOCKER_REGISTRY_HOST
              value: "{{ .Values.global.registry.url }}" 
            - name: REMOTE_DOCKER_REGISTRY_PASSWORD
              value: "{{ .Values.global.registry.password }}"              
            - name: REMOTE_DOCKER_REGISTRY_USERNAME
              value: "{{ .Values.global.registry.username }}"
            - name: REMOTE_DOCKER_PULL_HOST
              value: "{{ .Values.global.registry.url }}"
            {{- with .Values.env }}
{{ toYaml . | indent 12 }}
            {{- end }}
          volumeMounts:
            - name: dockerconfig
              mountPath: "/root/.docker"
              readOnly: true
          livenessProbe:
            initialDelaySeconds: 40
            httpGet:
              path: /health
              port: http
          readinessProbe:
            initialDelaySeconds: 40
            httpGet:
              path: /health
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.global.tolerations }}  
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
      volumes:
        - name: dockerconfig
          secret:
            secretName: "docker-credentials-{{ .Release.Name }}"
            items:
              - key: ".dockerconfigjson"
                path: "config.json"
